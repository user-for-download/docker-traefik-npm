version: "3.9"

name: monitoring

volumes:
    prometheus_data: {}
    grafana_data: {}
    alertmanager_data: {}
    postgres_data: {}

networks:
  t2_proxy:
    name: t2_proxy
    external: true
 
  net_mntr:
    name: net_mntr
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.88.0/24

########################### SECRETS
secrets:
 #Grafana
  gf_database_password:
    file: $SECRETSDIR/GF_DATABASE_PASSWORD
  postgres_password:
    file: $SECRETSDIR/GF_DATABASE_PASSWORD

services:
  # prometheus 
  prometheus:
      image: prom/prometheus
      container_name: prometheus
      volumes:
        - $APPDIR/prometheus:/etc/prometheus
        - prometheus_data:/prometheus
      command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --storage.tsdb.retention.time=200h
        - --web.enable-lifecycle
      networks:
        - t2_proxy
        - net_mntr
      security_opt:
        - no-new-privileges:true
      restart: always
      labels:
        traefik.enable: true
        traefik.http.routers.prometheus-rtr.entrypoints: http
        traefik.http.routers.prometheus-rtr.rule: Host(`$PROMETHEUS_DOMAINNAME`)
        traefik.http.routers.prometheus-rtr.service: prometheus-svc
        #traefik.http.routers.prometheus-rtr.middlewares: middlewares-authelia@file
        traefik.http.services.prometheus-svc.loadbalancer.server.port: 9090 
        org.label-schema.group: "monitoring"
  
  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: $PUID
    volumes:
      - grafana_data:/var/lib/grafana
      - $APPDIR/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - t2_proxy
      - net_mntr
    security_opt:
      - no-new-privileges:true
    restart: always
    depends_on:
      - postgres
    secrets: [gf_database_password]
    environment:
      TZ: $TZ
      GF_DEFAULT_INSTANCE_NAME: setup
      #GF_SECURITY_ADMIN_USER: admin
      #GF_SECURITY_ADMIN_PASSWORD: admin
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: grafana
      GF_DATABASE_PASSWORD__FILE: /run/secrets/gf_database_password
    labels:
      traefik.enable: true
      traefik.http.routers.grafana-rtr.entrypoints: http
      traefik.http.routers.grafana-rtr.rule: Host(`$GRAFANA_DOMAINNAME`)
      traefik.http.routers.grafana-rtr.service: grafana-svc
      #traefik.http.routers.grafana-rtr.middlewares: middlewares-authelia@file
      traefik.http.services.grafana-svc.loadbalancer.server.port: 3000
      org.label-schema.group: "monitoring"
  
  # postgres
  postgres:
    container_name: gr-postgres
    image: bitnami/postgresql:latest
    networks:
      - net_mntr
    restart: always
    secrets: [postgres_password]
    environment:
      POSTGRESQL_USERNAME: grafana
      POSTGRESQL_DATABASE: grafana
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/bitnami/postgresql
    labels:
      org.label-schema.group: "monitoring"

  # nodeexporter 
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - net_mntr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # cadvisor 
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    expose:
      - 808
    networks:
      - net_mntr
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # alertmanager 
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    #expose:
    #  - 9093
    volumes:
      - $APPDIR/alertmanager:/config
      - alertmanager_data:/alertmanager
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - t2_proxy
      - net_mntr
    command: 
     - "--config.file=/config/alertmanager.yml"
     - "--log.level=warn"
     - "--storage.path=/alertmanager"
    labels:
      traefik.enable: true
      traefik.http.routers.alertmanager-rtr.entrypoints: http
      traefik.http.routers.alertmanager-rtr.rule: Host(`$ALERTMANAGER_DOMAINNAME`)
      traefik.http.routers.alertmanager-rtr.service: alertmanager-svc
      #traefik.http.routers.alertmanager-rtr.middlewares: middlewares-authelia@file
      traefik.http.services.alertmanager-svc.loadbalancer.server.port: 9093
      org.label-schema.group: "monitoring"